{"ast":null,"code":"var _jsxFileName = \"/home/diana/client-abc/src/screens/DataImportation/index.js\";\nimport React, { Component } from 'react';\nimport AfdService from '../../services/afd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass DataImportation extends Component {\n  constructor() {\n    super();\n\n    this.showFile = async () => {\n      if (window.File && window.FileReader && window.FileList && window.Blob) {\n        var preview = document.getElementById('show-text');\n        var file = document.querySelector('input[type=file]').files[0];\n        var reader = new FileReader();\n        var textFile = /text.*/;\n\n        if (file.type.match(textFile)) {\n          reader.onload = function (event) {\n            preview.innerHTML = event.target.result;\n          };\n        } else {\n          preview.innerHTML = \"<span class='error'>No file!</span>\";\n        }\n\n        let afd = await file.text();\n        let data = {\n          afd\n        };\n        AfdService.create(data);\n        alert(\"Sucesso!\");\n      } else {\n        alert(\"Error!\");\n      }\n    };\n\n    this.state = {\n      name: 'AFD'\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: this.showFile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"show-text\",\n        children: \"AFD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default DataImportation;","map":{"version":3,"sources":["/home/diana/client-abc/src/screens/DataImportation/index.js"],"names":["React","Component","AfdService","DataImportation","constructor","showFile","window","File","FileReader","FileList","Blob","preview","document","getElementById","file","querySelector","files","reader","textFile","type","match","onload","event","innerHTML","target","result","afd","text","data","create","alert","state","name","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,oBAAvB;;;AAEA,MAAMC,eAAN,SAA8BF,SAA9B,CAAwC;AACpCG,EAAAA,WAAW,GAAG;AACV;;AADU,SAOdC,QAPc,GAOH,YAAY;AACnB,UAAIC,MAAM,CAACC,IAAP,IAAeD,MAAM,CAACE,UAAtB,IAAoCF,MAAM,CAACG,QAA3C,IAAuDH,MAAM,CAACI,IAAlE,EAAwE;AACpE,YAAIC,OAAO,GAAGC,QAAQ,CAACC,cAAT,CAAwB,WAAxB,CAAd;AACA,YAAIC,IAAI,GAAGF,QAAQ,CAACG,aAAT,CAAuB,kBAAvB,EAA2CC,KAA3C,CAAiD,CAAjD,CAAX;AACA,YAAIC,MAAM,GAAG,IAAIT,UAAJ,EAAb;AAEA,YAAIU,QAAQ,GAAG,QAAf;;AAEA,YAAIJ,IAAI,CAACK,IAAL,CAAUC,KAAV,CAAgBF,QAAhB,CAAJ,EAA+B;AAC3BD,UAAAA,MAAM,CAACI,MAAP,GAAgB,UAAUC,KAAV,EAAiB;AAC7BX,YAAAA,OAAO,CAACY,SAAR,GAAoBD,KAAK,CAACE,MAAN,CAAaC,MAAjC;AACH,WAFD;AAGH,SAJD,MAIO;AACHd,UAAAA,OAAO,CAACY,SAAR,GAAoB,qCAApB;AACH;;AACD,YAAIG,GAAG,GAAG,MAAMZ,IAAI,CAACa,IAAL,EAAhB;AAEA,YAAIC,IAAI,GAAG;AAACF,UAAAA;AAAD,SAAX;AAEAxB,QAAAA,UAAU,CAAC2B,MAAX,CAAkBD,IAAlB;AAEAE,QAAAA,KAAK,CAAC,UAAD,CAAL;AAEH,OAtBD,MAsBO;AACHA,QAAAA,KAAK,CAAC,QAAD,CAAL;AACH;AACJ,KAjCa;;AAEV,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE;AADG,KAAb;AAGH;;AA8BDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAE,KAAK5B;AAAlC;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,EAAE,EAAC,WAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AA3CmC;;AA8CxC,eAAeF,eAAf","sourcesContent":["import React, { Component } from 'react';\nimport AfdService from '../../services/afd';\n\nclass DataImportation extends Component {\n    constructor() {\n        super();\n        this.state = {\n            name: 'AFD'\n        };\n    }\n\n    showFile = async () => {\n        if (window.File && window.FileReader && window.FileList && window.Blob) {\n            var preview = document.getElementById('show-text');\n            var file = document.querySelector('input[type=file]').files[0];\n            var reader = new FileReader()\n\n            var textFile = /text.*/;\n\n            if (file.type.match(textFile)) {\n                reader.onload = function (event) {\n                    preview.innerHTML = event.target.result;\n                }\n            } else {\n                preview.innerHTML = \"<span class='error'>No file!</span>\";\n            }\n            let afd = await file.text();\n\n            let data = {afd}\n            \n            AfdService.create(data);\n\n            alert(\"Sucesso!\");\n\n        } else {\n            alert(\"Error!\");\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <input type=\"file\" onChange={this.showFile} />\n                <div id=\"show-text\">AFD</div>\n            </div>\n        );\n    }\n}\n\nexport default DataImportation;"]},"metadata":{},"sourceType":"module"}