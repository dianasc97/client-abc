{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from \"react\";\nexport default function ReadTextFile({\n  filename\n}) {\n  _s();\n\n  const reader = useRef(new FileReader()).current;\n  useEffect(() => {\n    if ('AFD.txt') {\n      reader.readAsDataURL('AFD.txt');\n    }\n  }, ['AFD.TXT']);\n  useEffect(() => {\n    reader.onload = () => {\n      console.log(reader.result);\n    };\n\n    reader.onerror = () => {\n      console.log(reader.error);\n    };\n  });\n  useEffect(() => {\n    return () => {\n      reader.onload = null;\n      reader.onerror = null;\n    };\n  }, []);\n  return null;\n}\n\n_s(ReadTextFile, \"oar26LXHkNzK/PSsH1f6Ql3PiHo=\");\n\n_c = ReadTextFile;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReadTextFile\");","map":{"version":3,"sources":["/home/diana/client-abc/src/screens/DataImportation/index.js"],"names":["React","useEffect","useRef","ReadTextFile","filename","reader","FileReader","current","readAsDataURL","onload","console","log","result","onerror","error"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,eAAe,SAASC,YAAT,CAAsB;AAACC,EAAAA;AAAD,CAAtB,EAAiC;AAAA;;AAC9C,QAAMC,MAAM,GAAGH,MAAM,CAAC,IAAII,UAAJ,EAAD,CAAN,CAAyBC,OAAxC;AACEN,EAAAA,SAAS,CAAC,MAAM;AAChB,QAAI,SAAJ,EAAe;AACbI,MAAAA,MAAM,CAACG,aAAP,CAAqB,SAArB;AACD;AACF,GAJU,EAIR,CAAC,SAAD,CAJQ,CAAT;AAMFP,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,MAAM,CAACI,MAAP,GAAgB,MAAM;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAYN,MAAM,CAACO,MAAnB;AACD,KAFD;;AAGAP,IAAAA,MAAM,CAACQ,OAAP,GAAiB,MAAM;AACrBH,MAAAA,OAAO,CAACC,GAAR,CAAYN,MAAM,CAACS,KAAnB;AACD,KAFD;AAGD,GAPQ,CAAT;AASAb,EAAAA,SAAS,CAAC,MAAM;AACd,WAAO,MAAM;AACXI,MAAAA,MAAM,CAACI,MAAP,GAAgB,IAAhB;AACAJ,MAAAA,MAAM,CAACQ,OAAP,GAAiB,IAAjB;AACD,KAHD;AAID,GALQ,EAKN,EALM,CAAT;AAOA,SAAO,IAAP;AACD;;GAzBuBV,Y;;KAAAA,Y","sourcesContent":["import React, { useEffect, useRef } from \"react\";\nexport default function ReadTextFile({filename}){\n  const reader = useRef(new FileReader()).current;\n    useEffect(() => {\n    if ('AFD.txt') {\n      reader.readAsDataURL('AFD.txt');\n    }\n  }, ['AFD.TXT']);\n\n  useEffect(() => {\n    reader.onload = () => {\n      console.log(reader.result)\n    };\n    reader.onerror = () => {\n      console.log(reader.error)\n    };\n  });\n\n  useEffect(() => {\n    return () => {\n      reader.onload = null;\n      reader.onerror = null;\n    };\n  }, []);\n\n  return null;\n}"]},"metadata":{},"sourceType":"module"}